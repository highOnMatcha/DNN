{
  "pix2pix_models": {
    "pix2pix-small": {
      "name": "pix2pix-small",
      "description": "Small Pix2Pix model (8M parameters) - Fast training for experimentation",
      "output_dir": "./models/pix2pix_small",
      "architecture": "pix2pix",
      "parameters": {
        "generator": {
          "input_channels": 3,
          "output_channels": 3,
          "ngf": 32,
          "n_blocks": 6,
          "norm_layer": "batch",
          "dropout": 0.5
        },
        "discriminator": {
          "input_channels": 6,
          "ndf": 32,
          "n_layers": 3,
          "norm_layer": "batch"
        },
        "image_size": 64,
        "beta1": 0.5,
        "beta2": 0.999,
        "lambda_l1": 100.0
      }
    },
    "pix2pix-medium": {
      "name": "pix2pix-medium",
      "description": "Medium Pix2Pix model (25M parameters) - Good balance of quality and speed",
      "output_dir": "./models/pix2pix_medium",
      "architecture": "pix2pix",
      "parameters": {
        "generator": {
          "input_channels": 3,
          "output_channels": 3,
          "ngf": 64,
          "n_blocks": 9,
          "norm_layer": "batch",
          "dropout": 0.5
        },
        "discriminator": {
          "input_channels": 6,
          "ndf": 64,
          "n_layers": 3,
          "norm_layer": "batch"
        },
        "image_size": 64,
        "beta1": 0.5,
        "beta2": 0.999,
        "lambda_l1": 100.0
      }
    },
    "pix2pix-large": {
      "name": "pix2pix-large",
      "description": "Large Pix2Pix model (54M parameters) - High quality results",
      "output_dir": "./models/pix2pix_large",
      "architecture": "pix2pix",
      "parameters": {
        "generator": {
          "input_channels": 3,
          "output_channels": 3,
          "ngf": 128,
          "n_blocks": 9,
          "norm_layer": "batch",
          "dropout": 0.5
        },
        "discriminator": {
          "input_channels": 6,
          "ndf": 128,
          "n_layers": 4,
          "norm_layer": "batch"
        },
        "image_size": 128,
        "beta1": 0.5,
        "beta2": 0.999,
        "lambda_l1": 100.0
      }
    }
  },
  "unet_models": {
    "unet-small": {
      "name": "unet-small",
      "description": "Small U-Net model (3M parameters) - Lightweight and fast",
      "output_dir": "./models/unet_small",
      "architecture": "unet",
      "parameters": {
        "input_channels": 3,
        "output_channels": 3,
        "features": [32, 64, 128, 256],
        "dropout": 0.1,
        "attention": false,
        "image_size": 64
      }
    },
    "unet-medium": {
      "name": "unet-medium",
      "description": "Medium U-Net model (12M parameters) - Good quality for most use cases",
      "output_dir": "./models/unet_medium",
      "architecture": "unet",
      "parameters": {
        "input_channels": 3,
        "output_channels": 3,
        "features": [64, 128, 256, 512],
        "dropout": 0.1,
        "attention": false,
        "image_size": 64
      }
    },
    "unet-attention": {
      "name": "unet-attention",
      "description": "U-Net with attention mechanism (15M parameters) - Enhanced feature learning",
      "output_dir": "./models/unet_attention",
      "architecture": "unet",
      "parameters": {
        "input_channels": 3,
        "output_channels": 3,
        "features": [64, 128, 256, 512],
        "dropout": 0.1,
        "attention": true,
        "image_size": 64
      }
    }
  },
  "cyclegan_models": {
    "cyclegan-small": {
      "name": "cyclegan-small",
      "description": "Small CycleGAN model (16M parameters) - Unpaired training capability",
      "output_dir": "./models/cyclegan_small",
      "architecture": "cyclegan",
      "parameters": {
        "generator": {
          "input_channels": 3,
          "output_channels": 3,
          "ngf": 32,
          "n_blocks": 6,
          "norm_layer": "instance"
        },
        "discriminator": {
          "input_channels": 3,
          "ndf": 32,
          "n_layers": 3,
          "norm_layer": "instance"
        },
        "image_size": 64,
        "lambda_cycle": 10.0,
        "lambda_identity": 0.5,
        "beta1": 0.5,
        "beta2": 0.999
      }
    },
    "cyclegan-medium": {
      "name": "cyclegan-medium",
      "description": "Medium CycleGAN model (50M parameters) - Better quality unpaired translation",
      "output_dir": "./models/cyclegan_medium",
      "architecture": "cyclegan",
      "parameters": {
        "generator": {
          "input_channels": 3,
          "output_channels": 3,
          "ngf": 64,
          "n_blocks": 9,
          "norm_layer": "instance"
        },
        "discriminator": {
          "input_channels": 3,
          "ndf": 64,
          "n_layers": 3,
          "norm_layer": "instance"
        },
        "image_size": 64,
        "lambda_cycle": 10.0,
        "lambda_identity": 0.5,
        "beta1": 0.5,
        "beta2": 0.999
      }
    }
  },
  "diffusion_models": {
    "ddpm-small": {
      "name": "ddpm-small",
      "description": "Small DDPM model (10M parameters) - Denoising diffusion for high quality",
      "output_dir": "./models/ddpm_small",
      "architecture": "ddpm",
      "parameters": {
        "channels": 3,
        "image_size": 64,
        "num_res_blocks": 2,
        "attention_resolutions": [32, 16, 8],
        "channel_mult": [1, 2, 4],
        "num_heads": 1,
        "use_scale_shift_norm": true,
        "dropout": 0.1,
        "timesteps": 1000,
        "noise_schedule": "linear",
        "loss_type": "l2"
      }
    },
    "ddpm-medium": {
      "name": "ddpm-medium",
      "description": "Medium DDPM model (25M parameters) - Better quality diffusion model",
      "output_dir": "./models/ddpm_medium",
      "architecture": "ddpm",
      "parameters": {
        "channels": 3,
        "image_size": 64,
        "num_res_blocks": 3,
        "attention_resolutions": [32, 16, 8],
        "channel_mult": [1, 2, 4, 8],
        "num_heads": 4,
        "use_scale_shift_norm": true,
        "dropout": 0.1,
        "timesteps": 1000,
        "noise_schedule": "cosine",
        "loss_type": "l2"
      }
    }
  },
  "training_configs": {
    "test": {
      "epochs": 5,
      "batch_size": 4,
      "learning_rate": 0.0002,
      "eval_frequency": 2,
      "save_frequency": 5,
      "max_samples": 100,
      "description": "Quick test configuration for debugging"
    },
    "development": {
      "epochs": 50,
      "batch_size": 16,
      "learning_rate": 0.0002,
      "eval_frequency": 5,
      "save_frequency": 10,
      "max_samples": 1000,
      "description": "Development configuration for experimentation"
    },
    "production": {
      "epochs": 200,
      "batch_size": 32,
      "learning_rate": 0.0002,
      "eval_frequency": 10,
      "save_frequency": 25,
      "max_samples": null,
      "description": "Full production training configuration"
    }
  }
}
