name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 autoflake mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Check code formatting with Black
      run: |
        black --check --line-length=79 --diff .
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --profile=black --line-length=79 --diff .
    
    - name: Lint with flake8
      run: |
        flake8 . --max-line-length=79 --select=E,W,F,C \
          --per-file-ignores="tests/*:E501,E402" \
          --exclude=__pycache__,*.pyc,.git,build,dist,.venv,venv
    
    - name: Check for unused imports
      run: |
        autoflake --check --remove-all-unused-imports --remove-unused-variables \
          --remove-duplicate-keys --expand-star-imports --recursive .
    
    - name: Type check with mypy (non-blocking)
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional || true
    
    - name: Check for trailing whitespace
      run: |
        if grep -r --include="*.py" '[[:space:]]$' .; then
          echo "Found trailing whitespace in Python files"
          exit 1
        fi

  test:
    runs-on: ubuntu-latest
    needs: lint-and-format
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run tests
      run: |
        pytest tests/ -v --tb=short --cov=src --cov-report=xml --cov-fail-under=70
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
